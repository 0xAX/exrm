%% -*- mode: erlang; tab-width: 4; indent-tabs-mode: 1; st-rulers: [70] -*-
%% vim: ts=4 sw=4 ft=erlang noet

{lib_dirs, [
  "../_elixir",
  "../_build/prod"
]}.

%% Specify the release to build by default (current project version #)
{default_release, {{{PROJECT_NAME}}}, "{{{PROJECT_VERSION}}}"}.

%% Release definition for the current project version
{release, { {{{PROJECT_NAME}}}, "{{{PROJECT_VERSION}}}" }, [
  {{{PROJECT_NAME}}},
  elixir,
  iex % needed for iex remote console
]}.

%% TODO: Figure out support for multiple release definitions, appups

%% ERTS is included by default, but let's be explicit
{include_erts, true}.

%% TODO: Support providing a sys.config file
%% {sys_config, "./path/to/sys.config"}

%% TODO: Support overrides
%% {overrides, [{example_app, "./path/to/example_app"}]}

%% TODO: Support custom vm.args file
%% {vm_args, "./path/to/vm.args"}

%% We're providing our own start script (see below)
{extended_start_script, false}.
{generate_start_script, false}.

%% This copies our custom start script to the release bin directory
{overlay, [
	{copy, "./files/runner", "bin/{{{PROJECT_NAME}}}"}
]}.